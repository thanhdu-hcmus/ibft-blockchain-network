name: Node.js CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: '20.x'
  HARDHAT_DIR: development/hardhat-tutorial
  URL: ${{ vars.URL }}
  ACCOUNTS: ${{ vars.ACCOUNTS }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-node-modules.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.HARDHAT_DIR }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          cd ${{ env.HARDHAT_DIR }}
          npm install --silent

  solhint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run Solhint
        run: |
          solhint ${{ env.HARDHAT_DIR }}/contracts/Token.sol
        continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: solhint
    steps:
      - name: Cache artifacts and build outputs
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.HARDHAT_DIR }}/artifacts
            ${{ env.HARDHAT_DIR }}/cache
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build project
        run: |
          cd ${{ env.HARDHAT_DIR }}
          npx hardhat clean
          npx hardhat --max-memory 2048 compile

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run tests
        run: |
          cd ${{ env.HARDHAT_DIR }}
          npx hardhat test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy application
        run: |
          cd ${{ env.HARDHAT_DIR }}
          echo "Deploying application..."
          yes y | npx hardhat ignition deploy ./ignition/modules/Token.js --network quorum
          echo "Application successfully deployed."
